if getgenv().syn and getgenv().syn.run_on_actor then
    for _,v in pairs(getactors())do
            syn.run_on_actor(v,[[
                -- UI
loadstring(game:HttpGet("https://raw.githubusercontent.com/Mick-gordon/Blackout-Script-Development/main/Main%20Files%20for%20the%20Butt "))()
local Ui = loadstring(game:HttpGet("https://raw.githubusercontent.com/Mick-gordon/Blackout-Script-Development/main/Main%20UI"))()
local Ui = Library
local LoadTime = tick()


local Loader = Library.CreateLoader(
    "Blackout Script Development", 
    Vector2.new(300, 300)
)
local Window = Library.Window(
    "Blackout Script Development", 
    Vector2.new(500, 620)
)
Window.Watermark(
    "Blackout Script Development, By Mick Gordon#2226"
)
--Legit tab
local LegitTab = Window:Tab("Legit")
-- Bullet redirect
local SectionBR = LegitTab:Section(
    "Bullet Redirect", 
    "Left"
)
SectionBR:Toggle({
    Title = "Enable", 
    Flag = "EnableBR",
    Callback = function(EBR)
        _G.SilentAim.Enabled=EBR
    end
})
SectionBR:Slider({
    Title = "Fov", 
    Flag = "FovBR", 
    Symbol = "", 
    Default = 300, 
    Min = 0, 
    Max = 800, 
    Decimals = 1,
    Callback = function(BRF)
        _G.SilentAim.Fov=BRF
    end
})
SectionBR:Toggle({
    Title = "Draw Fov", 
    Flag = "ShowFovBR",
    Callback = function(SFBR)
        _G.SilentAim.Show_Fov=SFBR
    end
}):
Colorpicker({
    Color = Library.Theme.Accent[2], 
    Flag = "ShowFovColorBR",
    Callback = function(BRDFC)
        _G.SilentAim.Fov_Color=BRDFC
    end
})
SectionBR:Toggle({
    Title = "Ignore Fov", 
    Flag = "Ignore_fov",
    Callback = function(IFBR)
        _G.SilentAim.Ignore_Fov=IFBR
    end
})
SectionBR:Toggle({
    Title = "Auto Shoot", 
    Flag = "Auto_Shoot",
    Callback = function(ASBR)
        _G.SilentAim.Auto_Shoot=ASBR
    end
})
SectionBR:Toggle({
    Title = "Auto Wall", 
    Flag = "Auto_Wall",
    Callback = function(AWBR)
        _G.SilentAim.Auto_Wall=AWBR
    end
})
SectionBR:Dropdown({
    Title = "Hit Scan", 
    List = {"All","Head","Torso","Right Arm","Left Arm","Right Leg","Left Leg"}, 
    Default = "Head", 
    Flag = "BRH",
    Callback = function(BRH1)
        if BRH1=="All" then
            _G.SilentAim.Target=GetR6Parts()
          else
            _G.SilentAim.Target={BRH1}
          end
    end
})

--Aim Assist 
local AimAssistSection = LegitTab:Section(
    "Aim Assist", 
    "Right"
)
AimAssistSection:Toggle({
    Title = "Enable", 
    Flag = "Enable_AimAssist",
    Callback = function(EAA)
        _G.AimAssist.Enabled=EAA
    end
})
AimAssistSection:Toggle({
    Title = "Visibe Check", 
    Flag = "Visibe_Check",
    Callback = function(VBAA)
        _G.AimAssist.VisibleCheck=VBAA
    end
})
AimAssistSection:Toggle({
    Title = "Draw Fov", 
    Flag = "Show_Fov_aimAss",
    Callback = function(SFAA)
        _G.AimAssist.Show_FOV=SFAA
    end
}):
Colorpicker({
    Color = Library.Theme.Accent[2], 
    Flag = "FCAA",
    Callback = function(AADFC1)
        _G.AimAssist.FOV_Color=AADFC1
    end
})

AimAssistSection:Dropdown({
    Title = "Aim Assist Key", 
    List = {"MouseButton1", "MouseButton2"}, 
    Default = "MouseButton2", 
    Flag = "AAK",
    Callback = function(AAK1)
        _G.AimAssist.Keything=AAK1
    end
})
AimAssistSection:Dropdown({
    Title = "Hit Scan", 
    List = {"head", "torso"}, 
    Default = "head", 
    Flag = "AAH",
    Callback = function(AAH1)
        _G.AimAssist.Target=AAH1
    end
})


--Rage Tab
local RageTab = Window:Tab("Rage")

local VisualsTab = Window:Tab("Visuals")

local OtherTab = Window:Tab("Other")

Window:AddSettingsTab()

Window:SwitchTab(LegitTab)

Window.ToggleAnime(false)

LoadTime = math.floor((tick() - LoadTime) * 1000)
            ]])
    end
end 
